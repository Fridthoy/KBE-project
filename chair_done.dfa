#! NX/KF 4.0
DefClass: chair_temp (ug_base_part);

    (number parameter) leg_length: 0; #70
    (number parameter) leg_length_max: <PARAM1max>; #70
    (number parameter) leg_length_min: <PARAM1min>; #70
    (number parameter) leg_side: 0; #5
    (number parameter) leg_side_max: <PARAM2max>; #5
    (number parameter) leg_side_min: <PARAM2min>; #5
    (number parameter) seat_length: 0; #50
    (number parameter) seat_length_max: <PARAM3max>; #50
    (number parameter) seat_length_min: <PARAM3min>; #50
    (number parameter) seat_width: 0; #50
    (number parameter) seat_width_max: <PARAM4max>; #50
    (number parameter) seat_width_min: <PARAM4min>; #50
    (number parameter) seat_thickness: 5;
    (number parameter) cussion_length: seat_length:+5; 
    (number parameter) cussion_width: seat_width:+5; 
    (number parameter) cussion_thickness: 5;
    (number parameter) leg_stick_diam: leg_side:/2; 
    (number parameter) height_backplate: 0; #70
    (number parameter) height_backplate_max: <PARAM5max>; #70
    (number parameter) height_backplate_min: <PARAM5min>; #70
    (number parameter) length_backplate: seat_length:; #50
    (number parameter) back_thickness: 5;
    (number parameter) back_curve_thickness: 2;
    (number parameter) height_backsticks: height_backplate:-30;
    (color parameter) color_chair: <PARAM6>;
    (color parameter) color_cussion: <PARAM7>;

    #Length går i x-retning
    #Width går i y-retning
    #Height går i z-retning
	

(child) seat: 
    {
        class, ug_block;
        length, seat_length:;
        width, seat_width:;
        height, seat_thickness:;
	Origin, Point(0,0,0);
	Direction, Vector(0,0,1);
        color, 3;
    };

(child) cussion: 
    {
        class, ug_block;
        length, cussion_length:;
        width, cussion_width:;
        height, cussion_thickness:;
	Origin, Point(-(cussion_length:-seat_length:)/2,leg_side:,seat_thickness:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
	Color, 3;
	
    };

(child) cussion_part:
    {
	class, ug_block;
	length, seat_length:-(2*leg_side:);
	width, leg_side:;
	height, cussion_thickness:;
	Origin, Point(leg_side:,0,leg_side:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {cussion:}
	Color, 3;
    };


(child) foot1: 
    {
        class, ug_block;
        length, leg_side:;
        width, leg_side:;
        height, leg_length:;
        color, 3;
	Origin, Point(0,0,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) foot2: 
     {
        class, ug_block;
        length, leg_side:;
        width, leg_side:;
        height, leg_length:;
        color, 3;
	Origin, Point(seat_length:-leg_side:,0,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) foot3: 
     {
        class, ug_block;
        length, leg_side:;
        width, leg_side:;
        height, leg_length:;
        color, 3;
	Origin, Point(0,seat_width:-leg_side:,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) foot4: 
     {
        class, ug_block;
        length, leg_side:;
        width, leg_side:;
        height, leg_length:;
        color, 3;
	Origin, Point(seat_length:-leg_side:,seat_width:-leg_side:,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) stick1:
     {
	class, ug_cylinder;
	diameter, leg_stick_diam:;
	height, seat_width:-leg_side:;
	Origin, Point(leg_side:/2,leg_side:/2,-leg_length:/2);
	Direction, Vector(0,1,0);
	Operation, Unite;
	Target, {foot1:, foot3:};

     };

(child) stick2:
     {
	class, ug_cylinder;
	diameter, leg_stick_diam:;
	height, seat_width:-leg_side:;
	Origin, Point(seat_length:-(leg_side:/2),leg_side:/2,-leg_length:/2);
	Direction, Vector(0,1,0);
	Operation, Unite;
	Target, {foot2:, foot4:};
     };

(child) stick3:
     {
	class, ug_cylinder;
	diameter, leg_stick_diam:;
	height, seat_length:-leg_side:;
	Origin, Point(leg_side:/2,leg_side:/2,-leg_length:/2);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {foot1:, foot2:};
     };

(child) back_stick1: 
    {
        class, ug_block;
        length, back_thickness:;
        width, back_thickness:;
        height, height_backplate:;
	Origin, Point(0,0,leg_side:);
	Direction, Vector(0,0,1);
	
    };

(child) back_stick2: 
    {
        class, ug_block;
        length, back_thickness:;
        width, back_thickness:;
        height, height_backplate:;
	Origin, Point(seat_length:-leg_side:,0,leg_side:);
	Direction, Vector(0,0,1);
    };

(child) back_curve1:
    {
	class, ug_block;
	length, length_backplate:-5;
	width, back_curve_thickness:;
	height, back_thickness:;
	Origin, Point(back_thickness:/2,back_thickness:/2-1,height_backplate:-5);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {back_stick1:, back_stick2:};
    };

(child) back_curve2:
    {
	class, ug_block;
	length, length_backplate:-5;
	width, back_curve_thickness:;
	height, back_thickness:;
	Origin, Point(back_thickness:/2,back_thickness:/2-1,height_backplate:-50);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {back_stick1:, back_stick2:};
    };

(child) vertical_backstick1:
    {
	class, ug_cylinder;
	diameter, back_curve_thickness:;
	height, height_backsticks:;
	Origin, Point((seat_length:/4)*3,back_thickness:/2,height_backplate:-45);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {back_curve1:,back_curve2:}; 
    };

(child) vertical_backstick2:
    {
	class, ug_cylinder;
	diameter, back_curve_thickness:;
	height, height_backsticks:;
	Origin, Point((seat_length:/4)*2,back_thickness:/2,height_backplate:-45);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {back_curve1:,back_curve2:}; 
    };

(child) vertical_backstick3:
    {
	class, ug_cylinder;
	diameter, back_curve_thickness:;
	height, height_backsticks:;
	Origin, Point(seat_length:/4,back_thickness:/2,height_backplate:-45);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {back_curve1:,back_curve2:}; 
    };
(Child) chair_colored:
    {
 	 Class, ug_body;
 	 Feature, {seat:,foot1:,foot2:,foot3:,foot4:,stick1:,stick2:,stick3:,back_stick1:,back_stick2:,back_curve1:,back_curve2:,vertical_backstick1:,vertical_backstick2:,vertical_backstick3:};
 	 Layer, 1;
 	 color, ug_askClosestColor(color_chair:);
    };

(Child) cussion_colored:
    {
 	 Class, ug_body;
 	 Feature, {cussion:, cussion_part:};
 	 Layer, 1;
 	 color, ug_askClosestColor(color_cussion:);
    };













